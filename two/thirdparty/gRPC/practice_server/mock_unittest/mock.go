// Code generated by MockGen. DO NOT EDIT.
// Source: ../proto/practice.pb.go

// Package mock_practice is a generated GoMock package.
package mock_practice

import (
	proto "github.com/jimweng/thirdparty/gRPC/practice_server/proto"
	gomock "github.com/golang/mock/gomock"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockHealthClient is a mock of HealthClient interface
type MockHealthClient struct {
	ctrl     *gomock.Controller
	recorder *MockHealthClientMockRecorder
}

// MockHealthClientMockRecorder is the mock recorder for MockHealthClient
type MockHealthClientMockRecorder struct {
	mock *MockHealthClient
}

// NewMockHealthClient creates a new mock instance
func NewMockHealthClient(ctrl *gomock.Controller) *MockHealthClient {
	mock := &MockHealthClient{ctrl: ctrl}
	mock.recorder = &MockHealthClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHealthClient) EXPECT() *MockHealthClientMockRecorder {
	return m.recorder
}

// CheckHealth mocks base method
func (m *MockHealthClient) CheckHealth(ctx context.Context, in *proto.CheckHealthRequest, opts ...grpc.CallOption) (*proto.CheckHealthReply, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "CheckHealth", varargs...)
	ret0, _ := ret[0].(*proto.CheckHealthReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckHealth indicates an expected call of CheckHealth
func (mr *MockHealthClientMockRecorder) CheckHealth(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealth", reflect.TypeOf((*MockHealthClient)(nil).CheckHealth), varargs...)
}

// MockHealthServer is a mock of HealthServer interface
type MockHealthServer struct {
	ctrl     *gomock.Controller
	recorder *MockHealthServerMockRecorder
}

// MockHealthServerMockRecorder is the mock recorder for MockHealthServer
type MockHealthServerMockRecorder struct {
	mock *MockHealthServer
}

// NewMockHealthServer creates a new mock instance
func NewMockHealthServer(ctrl *gomock.Controller) *MockHealthServer {
	mock := &MockHealthServer{ctrl: ctrl}
	mock.recorder = &MockHealthServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockHealthServer) EXPECT() *MockHealthServerMockRecorder {
	return m.recorder
}

// CheckHealth mocks base method
func (m *MockHealthServer) CheckHealth(arg0 context.Context, arg1 *proto.CheckHealthRequest) (*proto.CheckHealthReply, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckHealth", arg0, arg1)
	ret0, _ := ret[0].(*proto.CheckHealthReply)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckHealth indicates an expected call of CheckHealth
func (mr *MockHealthServerMockRecorder) CheckHealth(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealth", reflect.TypeOf((*MockHealthServer)(nil).CheckHealth), arg0, arg1)
}
