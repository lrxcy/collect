// Code generated by protoc-gen-go. DO NOT EDIT.
// source: practice.proto

package practice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// PersonInfo to include person detail for BMI
type PersonInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sexual               string   `protobuf:"bytes,2,opt,name=sexual,proto3" json:"sexual,omitempty"`
	Hight                int32    `protobuf:"varint,3,opt,name=hight,proto3" json:"hight,omitempty"`
	Weight               int32    `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PersonInfo) Reset()         { *m = PersonInfo{} }
func (m *PersonInfo) String() string { return proto.CompactTextString(m) }
func (*PersonInfo) ProtoMessage()    {}
func (*PersonInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_practice_fffbfdc5d072c6ac, []int{0}
}
func (m *PersonInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PersonInfo.Unmarshal(m, b)
}
func (m *PersonInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PersonInfo.Marshal(b, m, deterministic)
}
func (dst *PersonInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PersonInfo.Merge(dst, src)
}
func (m *PersonInfo) XXX_Size() int {
	return xxx_messageInfo_PersonInfo.Size(m)
}
func (m *PersonInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PersonInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PersonInfo proto.InternalMessageInfo

func (m *PersonInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonInfo) GetSexual() string {
	if m != nil {
		return m.Sexual
	}
	return ""
}

func (m *PersonInfo) GetHight() int32 {
	if m != nil {
		return m.Hight
	}
	return 0
}

func (m *PersonInfo) GetWeight() int32 {
	if m != nil {
		return m.Weight
	}
	return 0
}

// The request message containing the user's name.
type CheckHealthRequest struct {
	Personinfo           *PersonInfo `protobuf:"bytes,1,opt,name=personinfo,proto3" json:"personinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CheckHealthRequest) Reset()         { *m = CheckHealthRequest{} }
func (m *CheckHealthRequest) String() string { return proto.CompactTextString(m) }
func (*CheckHealthRequest) ProtoMessage()    {}
func (*CheckHealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_practice_fffbfdc5d072c6ac, []int{1}
}
func (m *CheckHealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealthRequest.Unmarshal(m, b)
}
func (m *CheckHealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealthRequest.Marshal(b, m, deterministic)
}
func (dst *CheckHealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealthRequest.Merge(dst, src)
}
func (m *CheckHealthRequest) XXX_Size() int {
	return xxx_messageInfo_CheckHealthRequest.Size(m)
}
func (m *CheckHealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealthRequest proto.InternalMessageInfo

func (m *CheckHealthRequest) GetPersoninfo() *PersonInfo {
	if m != nil {
		return m.Personinfo
	}
	return nil
}

// ReportInfo to include health report detail for persons
type ReportInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	BMI                  int32    `protobuf:"varint,3,opt,name=bMI,proto3" json:"bMI,omitempty"`
	IsHealth             bool     `protobuf:"varint,4,opt,name=IsHealth,json=isHealth,proto3" json:"IsHealth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportInfo) Reset()         { *m = ReportInfo{} }
func (m *ReportInfo) String() string { return proto.CompactTextString(m) }
func (*ReportInfo) ProtoMessage()    {}
func (*ReportInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_practice_fffbfdc5d072c6ac, []int{2}
}
func (m *ReportInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportInfo.Unmarshal(m, b)
}
func (m *ReportInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportInfo.Marshal(b, m, deterministic)
}
func (dst *ReportInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportInfo.Merge(dst, src)
}
func (m *ReportInfo) XXX_Size() int {
	return xxx_messageInfo_ReportInfo.Size(m)
}
func (m *ReportInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ReportInfo proto.InternalMessageInfo

func (m *ReportInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReportInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ReportInfo) GetBMI() int32 {
	if m != nil {
		return m.BMI
	}
	return 0
}

func (m *ReportInfo) GetIsHealth() bool {
	if m != nil {
		return m.IsHealth
	}
	return false
}

// The response message containing the greetings
type CheckHealthReply struct {
	Reportinfo           *ReportInfo `protobuf:"bytes,1,opt,name=reportinfo,proto3" json:"reportinfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CheckHealthReply) Reset()         { *m = CheckHealthReply{} }
func (m *CheckHealthReply) String() string { return proto.CompactTextString(m) }
func (*CheckHealthReply) ProtoMessage()    {}
func (*CheckHealthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_practice_fffbfdc5d072c6ac, []int{3}
}
func (m *CheckHealthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckHealthReply.Unmarshal(m, b)
}
func (m *CheckHealthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckHealthReply.Marshal(b, m, deterministic)
}
func (dst *CheckHealthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckHealthReply.Merge(dst, src)
}
func (m *CheckHealthReply) XXX_Size() int {
	return xxx_messageInfo_CheckHealthReply.Size(m)
}
func (m *CheckHealthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckHealthReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckHealthReply proto.InternalMessageInfo

func (m *CheckHealthReply) GetReportinfo() *ReportInfo {
	if m != nil {
		return m.Reportinfo
	}
	return nil
}

func init() {
	proto.RegisterType((*PersonInfo)(nil), "practice.PersonInfo")
	proto.RegisterType((*CheckHealthRequest)(nil), "practice.CheckHealthRequest")
	proto.RegisterType((*ReportInfo)(nil), "practice.ReportInfo")
	proto.RegisterType((*CheckHealthReply)(nil), "practice.CheckHealthReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HealthClient is the client API for Health service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HealthClient interface {
	// Sends a greeting
	CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthReply, error)
}

type healthClient struct {
	cc *grpc.ClientConn
}

func NewHealthClient(cc *grpc.ClientConn) HealthClient {
	return &healthClient{cc}
}

func (c *healthClient) CheckHealth(ctx context.Context, in *CheckHealthRequest, opts ...grpc.CallOption) (*CheckHealthReply, error) {
	out := new(CheckHealthReply)
	err := c.cc.Invoke(ctx, "/practice.Health/CheckHealth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HealthServer is the server API for Health service.
type HealthServer interface {
	// Sends a greeting
	CheckHealth(context.Context, *CheckHealthRequest) (*CheckHealthReply, error)
}

func RegisterHealthServer(s *grpc.Server, srv HealthServer) {
	s.RegisterService(&_Health_serviceDesc, srv)
}

func _Health_CheckHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HealthServer).CheckHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/practice.Health/CheckHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HealthServer).CheckHealth(ctx, req.(*CheckHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Health_serviceDesc = grpc.ServiceDesc{
	ServiceName: "practice.Health",
	HandlerType: (*HealthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckHealth",
			Handler:    _Health_CheckHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "practice.proto",
}

func init() { proto.RegisterFile("practice.proto", fileDescriptor_practice_fffbfdc5d072c6ac) }

var fileDescriptor_practice_fffbfdc5d072c6ac = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x10, 0xc7, 0xad, 0xdb, 0x6a, 0xbd, 0x81, 0x8c, 0x63, 0x48, 0x29, 0x3e, 0x8c, 0x3c, 0xed, 0x69,
	0x0f, 0xd3, 0x6f, 0xe0, 0xcb, 0x2a, 0x08, 0x12, 0x3f, 0x41, 0x56, 0xae, 0x4b, 0xb1, 0x6b, 0x62,
	0x92, 0xa1, 0xfb, 0xf6, 0xd2, 0x34, 0xb3, 0x15, 0xb7, 0xb7, 0xfb, 0x5d, 0x2e, 0xf7, 0xff, 0x91,
	0xc0, 0x9d, 0x36, 0xa2, 0x70, 0x55, 0x41, 0x2b, 0x6d, 0x94, 0x53, 0x98, 0x9c, 0x98, 0x95, 0x00,
	0x6f, 0x64, 0xac, 0x6a, 0xf2, 0xa6, 0x54, 0x88, 0x30, 0x6e, 0xc4, 0x9e, 0xd2, 0x68, 0x11, 0x2d,
	0x6f, 0xb9, 0xaf, 0xf1, 0x1e, 0x62, 0x4b, 0xdf, 0x07, 0x51, 0xa7, 0xd7, 0xbe, 0x1b, 0x08, 0xe7,
	0x30, 0x91, 0xd5, 0x4e, 0xba, 0x74, 0xb4, 0x88, 0x96, 0x13, 0xde, 0x41, 0x3b, 0xfd, 0x45, 0xbe,
	0x3d, 0xf6, 0xed, 0x40, 0xec, 0x05, 0xf0, 0x59, 0x52, 0xf1, 0xb1, 0x21, 0x51, 0x3b, 0xc9, 0xe9,
	0xf3, 0x40, 0xd6, 0xe1, 0x13, 0x80, 0xf6, 0xe9, 0x55, 0x53, 0x2a, 0x9f, 0x3a, 0x5d, 0xcf, 0x57,
	0xbf, 0xb2, 0xbd, 0x19, 0x1f, 0xcc, 0x31, 0x09, 0xc0, 0x49, 0x2b, 0xe3, 0x2e, 0x3a, 0xa7, 0x70,
	0xb3, 0x27, 0x6b, 0xc5, 0x8e, 0x82, 0xf4, 0x09, 0x71, 0x06, 0xa3, 0xed, 0x6b, 0x1e, 0x9c, 0xdb,
	0x12, 0x33, 0x48, 0x72, 0xdb, 0x69, 0x79, 0xe7, 0x84, 0x27, 0x55, 0x60, 0xb6, 0x81, 0xd9, 0x1f,
	0x6b, 0x5d, 0x1f, 0x5b, 0x67, 0xe3, 0xd3, 0xcf, 0x3b, 0xf7, 0x66, 0x7c, 0x30, 0xb7, 0x7e, 0x87,
	0xb8, 0x5b, 0x82, 0x39, 0x4c, 0x07, 0x3b, 0xf1, 0xa1, 0xbf, 0xfa, 0xff, 0x81, 0xb2, 0xec, 0xc2,
	0xa9, 0xae, 0x8f, 0xec, 0x6a, 0x1b, 0xfb, 0xdf, 0x7c, 0xfc, 0x09, 0x00, 0x00, 0xff, 0xff, 0x3f,
	0xbc, 0xe4, 0x5a, 0xdf, 0x01, 0x00, 0x00,
}
